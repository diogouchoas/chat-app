version: 2.1

orbs:
    docker: circleci/docker@1.0.1

jobs:
  test-frontend:
    working_directory: ~/chat-app/frontend
    docker:
      - image: circleci/node
    environment:
      REACT_APP_BACKEND_WS: ws://localhost:8080
      REACT_APP_BACKEND_URL: http://localhost:8080
    steps:
      - checkout:
          path: ~/chat-app
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: 
          name: Install Dependencies
          command: echo "npm-install"
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: 
          name: Testing
          command: echo "npm test"

  build-frontend-image:
    # working_directory: ~/chat-app/frontend
    # machine:
    #   image: ubuntu-1604:202004-01
    # steps:
    #     - docker/check:
    #           registry: $DOCKER_REGISTRY
    #     - docker/build:
    #           image: $DOCKER_IMAGE_NAME
    #           registry: $DOCKER_REGISTRY
    #     - docker/push:
    #           image: $DOCKER_IMAGE_NAME
    #           registry: $DOCKER_REGISTRY
    working_directory: ~/chat-app/frontend
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:latest .
  # publish-latest:
  #   environment:
  #     IMAGE_NAME: building-on-ci
  #   docker:
  #     - image: circleci/buildpack-deps:stretch
  #   steps:
  #     - setup_remote_docker
  #     - run:
  #         name: Publish Docker Image to Docker Hub
  #         command: |
  #           echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  #           docker push $IMAGE_NAME:latest
  deploy-frontend-image:
    working_directory: ~/chat-app/frontend
    docker:
      - image: circleci/node
    steps:
      - run: echo "push-frontend-image"
  build-backend-image:
    working_directory: ~/chat-app/backend
    docker:
      - image: circleci/node
    steps:
      - run: echo "build-backend-image"
  deploy-backend-image:
    working_directory: ~/chat-app/backend
    docker:
      - image: circleci/node
    steps:
      - run: echo "push-backend-image"

workflows:
  build-production:
    jobs:
      - test-frontend
      - build-frontend-image:
          requires: 
              - test-frontend
      - deploy-frontend-image:
          requires:
              - test-frontend
              - build-frontend-image
      - build-backend-image
      - deploy-backend-image:
          requires: 
              - build-backend-image